<div class="row">
  <div class="col-md-10">
    <h1>Forms</h1>
    <p>Create and modify site forms using the Semini Primer and Raw forms. A structured form creation system allows for the development of structured site data.</p>
  </div>
{{>tools}}  
 


</div>  <hr>
<div class="row" id="page">
  <div class="col-md-4" id="navMenuPanel">
    <div id="myProgress">
      <div id="myBar"> </div>
    </div>
    <h5><strong>Navigation</strong> <small>  Use the navigation tree to interact with the database.</small><div style="text-align: right;position: absolute;right: 14px;top:0px" id="treeNavEdit" ></div> </h5>
    <div class=" ">
     <div style="padding-bottom:15px;padding-bottom:15px">
      <input id="search_field" name="searchinput" type="search" placeholder="Search Navigation" class="form-control input-md">      
    </div>
    <div id="jstree"></div> 
  </div>
  <div class="btn-group" role="group" aria-label="..." style="padding-bottom: 15px">
  </div>
</div>  
<div class="col-md-8" id="browserArea">
  <div id="panel">  
    <div style="border-width: 2px; border-style: dashed; border-color: grey;padding:55px;text-align: center;border-radius: 5px;"><strong> Heads up!</strong> Click on the nodes of the navigation tree to interact with the site.</div>
  </div>
</div>
</div>
 
<script type="text/javascript">

  var databaseid = {{{items}}};
  var Formids = {{{Formids}}};
  var navmenuHeadings = ['detail','description','icon','buttons','tabs','parent','template','value']
  var databaseMenu = []
  var temp =[]



/////////////////////////////
////     DEBUG AREA     //// 
///////////////////////////
console.log( 'Tempalte Name : plugins/semini/views/forms' )
console.log( '-------------------------' )
console.log( 'databaseid : ',databaseid )
console.log( 'Formids : ',Formids )
console.log( 'navmenuHeadings : ',navmenuHeadings )
console.log( 'databaseMenu : ',databaseMenu )
console.log( 'temp : ',temp )
console.log( '-------------------------' )
console.log( 'Tempalte Name : plugins/semini/views/forms' )

/////////////////////////////////// 
//////  GET JSTREE BY ID    //////
///////////////////////////////// 
function jstreeGet(ids){
  jQuery.ajax({
    'url': '/forms/jstree?ids='+ids,
    'async': true,
    'global': false,
    'success': function (dataSchemaObject) {
     var dataSchemaObject = JSON.parse(dataSchemaObject)
     console.log(dataSchemaObject)
      //Add the headings to the page.
      $('#descriptions').html(dataSchemaObject.thisitem[0].name)
      $('#details').html(dataSchemaObject.thisitem[0].detail)
      $('#panel').html('<div style="border-width: 2px; border-style: dashed; border-color: grey;padding:55px;text-align: center;border-radius: 5px;"><strong> Heads up!</strong> Click on the nodes of the navigation tree to interact with the site.</div>')
      var dataSchemaObject1 = fitstFormat(dataSchemaObject.children)
      //manipulate data to work with the jstree
      var jsTreeData = dataJStreeConvert (dataSchemaObject1)
      var locations = 'jstree'
      $('#'+locations).html('')
      //load the jstree
      //change the primary page id variable , used for the parent
      databaseid = ids
      loadNavMenu(locations,jsTreeData)
    }
  });
}

function fitstFormat(databaseMenu){
  var temp =[]
    //This is where the id is injected into the menu item . Crude hacky work around , not sure how to improve.
    for (var i = 0; i < databaseMenu.length; i++) {
      //the add the id to the array going into the menu .
      if (databaseMenu[i]['elementID'] == "") {
        databaseMenu[i].entry.id = databaseMenu[i]['_id']
      }else{
        databaseMenu[i].entry.id = databaseMenu[i]['elementID']
      }
      temp.push(databaseMenu[i].entry)
    }
    databaseMenu = temp
    return databaseMenu
  }
  
///////////////////////////// 
//////  INITIALISE    //////
/////////////////////////// 
$( document ).ready(function() {
  pageNavEdit(databaseid)
  jstreeGet(databaseid)
});

/////////////////////////////////////////
//////  DATACONVERT FOR JSTREE    //////
/////////////////////////////////////// 
function dataJStreeConvert (databaseMenu){
  var newData = []
  for (var i = 0; i < databaseMenu.length; i++) {
    var temp = {}
    for (key in databaseMenu[i]){
      switch (true){
        case (key == 'id'):
        temp['id'] =  databaseMenu[i][key]
        if (databaseMenu[i][key]=='5848fc75b622bb53eca6ffd7') {
          state = {
              "opened" : true,  // is the node open
            }
            temp['state'] = state
          }
          break;
          case (key == 'parent'):
          temp['parent'] = databaseMenu[i][key]
          break;
          case (key == 'description'):
          temp['text'] = databaseMenu[i][key]
          break;
          case (key == 'icon'):
          temp['icon'] = databaseMenu[i][key]
          break;
          case (key == 'template'):
          aclass = { 
            "data-template" : databaseMenu[i][key],
          }
          temp['a_attr'] =  aclass
          break;
          case (key == 'field'):
          aclass = { 
            "data-field" : databaseMenu[i][key],
          }
          temp['a_attr'] =  aclass
          break;          
        }
      }
      newData.push(temp)
    }
//error trap the menu.
for (var i = 0; i < newData.length; i++) {
  if (!newData[i].parent) {
    newData[i].parent = '#'
  }
}
sortResults(newData,'text', true);
return newData
}

////////////////////////////////////////////////
////////   CUSTOM JSON SORTING FUNCTION ///////
//////////////////////////////////////////////
function sortResults(json , prop, asc) {
  json = json.sort(function(a, b) {
    if (asc) {
      return (a[prop] > b[prop]) ? 1 : ((a[prop] < b[prop]) ? -1 : 0);
    } else {
      return (b[prop] > a[prop]) ? 1 : ((b[prop] < a[prop]) ? -1 : 0);
    }
  });
  return json;
}

////////////////////////////////////////////////
////////    LOAD NAV TREE INTO MEMORY   ///////
//////////////////////////////////////////////
function loadNavMenu(locations,dataNav){
  //console.log(dataNav)
  //Destory the tree if it exists
  if (jQuery('#'+locations).jstree("destroy")) {
    jQuery('#'+locations).jstree("destroy");
  }
  var $root =jQuery('#'+locations).jstree({ 
    'core' : {
      'data' : dataNav,        
      'themes': {
        'name': 'proton',
        'responsive': true,
        'stripes' : false,
      },
    } ,
    "checkbox" : {
      "keep_selected_style" : false
    },
    "multiple": false,
    "plugins" : [   "search" , "state"]
  });

/////////////////////////////////
////////  SEARCH NAV MENU ///////
/////////////////////////////////
var to = false;
jQuery('#search_field').keyup(function () {
  if(to) { clearTimeout(to); }
  to = setTimeout(function () {
    var v = jQuery('#search_field').val();
    jQuery('#'+locations).jstree(true).search(v);
  }, 250);
});

//////////////////////////////////////////////////
////////  EVENT LISTNER ON THE TREE VIEW  ///////
////////////////////////////////////////////////
jQuery('#'+locations)
    // listen for event
    .on('changed.jstree', function (e, dataTree) {
      var i, j, r = []
      for(i = 0, j = dataTree.selected.length; i < j; i++) {
        var ids=(dataTree.instance.get_node(dataTree.selected[0]).id);
        //keep useful code snippet , however no longer required.
        var template=(dataTree.instance.get_node(dataTree.selected[0]).a_attr['data-template']);
        var field=(dataTree.instance.get_node(dataTree.selected[0]).a_attr['data-field']);
        r.push(dataTree.instance.get_node(dataTree.selected[i]).template);
      }
      if (field) {
        templateloading(field)
      }else{
        templateloading(ids)
      }
    })


    console.log('Admin Page')
    console.log('---------------------------')
    console.log(' databaseid :', databaseid )
    console.log(' Formids :', Formids )
    console.log(' navmenuHeadings :', navmenuHeadings )
    console.log(' databaseMenu :', databaseMenu )
    console.log(' temp :', temp )
    console.log('---------------------------')
    console.log('Admin Page')

  }

///////////////////////////////////////////////////////
////////  EVENT LISTNER FUNCTION AREA DATABASE ///////
/////////////////////////////////////////////////////
function templateloading(ids){
//Ensure that the first load error is covered , also any other errors.
if(ids){
  jQuery.ajax({
   'async': true,
   'global': false,
   'url': '/forms/templateload?ids='+ids,
   'success': function (dataSchemaObject) {
     jQuery('#panel').html("")
     jQuery('#panel').html(dataSchemaObject)
     treeNavEdit("treeNavEdit")
   }
 });
}
}

//////////////////////////////////////
////////    PROGRESS BAR    /////////
////////////////////////////////////
function move() {
  var elem = document.getElementById("myBar");   
  elem.style.height = '5px'; 
  elem.style.background = '#4c8ffd'; 
  var width = 10;
  var id = setInterval(frame, 1);
  function frame() {
    if (width >= 100) {
      clearInterval(id);
      collapse()
    } else {
      width++; 
      elem.style.width = width + '%'; 
    }
  }
}

function collapse() {
  var elem = document.getElementById("myBar");   
  elem.style.background = 'white'; 
}

//////////////////////////////////////
////////    GET FORM BY ID  /////////
////////////////////////////////////
function newMenuItems(formdata,idItem,raw,parentid,injectParentid,headings){
  var headings = JSON.stringify(headings)
  jQuery.ajax({
    'url': '/forms/getform?formdata='+formdata+'&idItem='+idItem+'&raw='+raw+'&parentid='+parentid+'&headings='+headings,
    'async': true,
    'global': false,
    'success': function (dataSchemaObject) {
      $('#formAreaModal').html(dataSchemaObject)
    }
  });
}

////////////////////////////////////////////////////
////////    BUTTON CLICK ADD NEW DB ITEM  /////////
//////////////////////////////////////////////////
function newMenuItem(parentid){
  newMenuItems(Formids,'','use',databaseid,'',navmenuHeadings)
}

///////////////////////////////////////////////////
////////    BUTTON CLICK EDIT RAW DB ITEM  ///////
//////////////////////////////////////////////////
function editRaw(parentid){
  newMenuItems(Formids,databaseid,'raw',databaseid,'',navmenuHeadings)
}

</script>

